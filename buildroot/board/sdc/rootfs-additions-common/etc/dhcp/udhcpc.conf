#!/bin/sh
# /etc/dhcp/udhcpc.conf
# Script for pre/post udhcpc configuration.  ksjonh_20120521
#
LEASES_FILE=/var/lib/dhcp/dhclient.leases
RESOLV_CONF=/etc/resolv.conf
LOG_FILE=/var/log/udhcpc


[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1
[ -n "$udhcpc_" ] || LOG_FILE=/dev/null


write_leases_file()
{
  date_now=`date +%Y/%m/%d\ %H:%M:%S`
  date00=`date +%s`
  let date24=$date00+$lease
  date_expire=`date +%Y/%m/%d\ %H:%M:%S -d @$date24`

  # entries count
  let eN=0 
  
  # create /tmp destination for leases file, if necessary
  [ -d ${LEASES_FILE%/*} ] || ln -s /tmp ${LEASES_FILE%/*}

  cat >>$1<<-	lease-block-end
	lease {
	  interface "$interface";
	  option fixed-address $ip;
	  option subnet-mask $subnet;
	  option routers $router;
	  option dhcp-lease-time $lease;
	  option dhcp-message-type $opt53;
	  option domain-name-servers $dns;
	  option dhcp-server-identifier $serverid;
	  option broadcast-address $broadcast;
	  option domain-name "$domain";
	  expire $eN $date_expire;
	}
	lease-block-end
}

echo "__${0} - ${@}" >>$LOG_FILE
case "$1" in
  deconfig)
    /sbin/ifconfig $interface 0.0.0.0
    # This deconfigures the interface, so packets can't use it
    # and removes (flushes) all relative entries from the routing table.
    # The interface is still (up) accessible to the IP layer (kernel-resident).
    ;;

  renew|bound)
    # re-up this interface, to ensure it is accessible/activated
    /sbin/ifconfig $interface up
    
    # debug, show what we got from the server
    env |sed -n '/^[a-z]/p' >>$LOG_FILE
    
    [ -n "$bootfile" ] && {
      BOOTFILE="bootfile $bootfile"
      [ -n "$udhcpc_" ] \
      && echo "    $BOOTFILE"
      # begin-bootfile-option-handler
      [ -f /tmp/platform_bootfile_option ] \
      && . /tmp/platform_bootfile_option >>$LOG_FILE 2>&1
      # endof-bootfile-option-handler
    }
    [ -n "$broadcast" ] && {
      BROADCAST="broadcast $broadcast"
      [ -n "$udhcpc_" ] \
      && echo "    $BROADCAST"
    }
    [ -n "$subnet" ] && {
      NETMASK="netmask $subnet"
      [ -n "$udhcpc_" ] \
      && echo "    $NETMASK"
    }
    
    [ -n "$udhcpc_" ] \
    && echo ifconfig $interface $ip $BROADCAST $NETMASK 
    
    /sbin/ifconfig $interface $ip $BROADCAST $NETMASK \
    || echo "    args: $interface $ip $BROADCAST $NETMASK"
    
    if [ -n "$router" ]
    then
      while route del default gw 0.0.0.0 dev $interface 2>/dev/null; do
        [ -n "$udhcpc_" ] \
        && echo "    route del default gw 0.0.0.0 dev $interface"
        :
      done
      for i in $router
      do
        route add default gw $i dev $interface
      done
    else
      echo warning, router not set
    fi
    
    echo -n >$RESOLV_CONF
    [ -n "$domain" ] && echo search $domain >>$RESOLV_CONF
    for i in $dns
    do
      echo adding dns $i
      echo nameserver $i >>$RESOLV_CONF
    done
    
    # default DHCPACK and remove leading zero
    opt53=${opt53:-5}; opt53=${opt53##*0}

    write_leases_file $LEASES_FILE
    ;;

  nak)
    [ -n "$udhcpc_" ] \
    && echo "  ...got nak"
    ;;
    
  leasefail)
    [ -n "$udhcpc_" ] \
    && echo "  ..."
    ;;
esac

exit 0
