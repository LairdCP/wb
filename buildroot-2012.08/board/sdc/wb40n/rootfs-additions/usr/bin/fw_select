#!/bin/sh
# fw_select - show or select a/b images for next bootup
# ksjonh_20120611

[ -x /usr/sbin/fw_printenv ] || { echo "  ...missing: /usr/sbin/fw_printenv"; err=.; }
[ -x /usr/sbin/fw_setenv ] || { echo "  ...missing: /usr/sbin/fw_setenv"; err=.; }

kernel_x() {
  # report the kernel partition using... (pseudo-static)
  fw_printenv -n bootcmd |grep -q 'nand read 0x21000000 0x[0]*2[aA]0000 0x200000' && echo b || echo a
}
rootfs_x() {
  # report the rootfs partition using... (pseudo-static)
  fw_printenv -n bootargs |grep -q 'ubi.mtd=6' && echo b || echo a
}

[ -z "$err" ] || exit 1

case $1 in

  -a*)
    [ "kernel" == "${1:2}" ] || [ -z "${1:2}" ] \
    && {
      fw_setenv bootcmd \
        'nand read 0x21000000 0x000A0000 0x200000; bootm' \
      && echo kernel-a is set
    }
    [ "rootfs" == "${1:2}" ] || [ -z "${1:2}" ] \
    && {
      fw_setenv bootargs \
        'mem=32M console=ttyS0,115200 ubi.mtd=5 root=ubi0:rootfs rootfstype=ubifs loglevel=4 rootflags=bulk_read,chk_data_crc rw' \
      && echo rootfs-a is set
    }  
    ;;
    
  -b*)
    [ "kernel" == "${1:2}" ] || [ -z "${1:2}" ] \
    && {
      fw_setenv bootcmd \
        'nand read 0x21000000 0x002A0000 0x200000; bootm' \
      && echo kernel-b is set
    }
    [ "rootfs" == "${1:2}" ] || [ -z "${1:2}" ] \
    && {
      fw_setenv bootargs \
        'mem=32M console=ttyS0,115200 ubi.mtd=6 root=ubi0:rootfs rootfstype=ubifs loglevel=4 rootflags=bulk_read,chk_data_crc rw' \
      && echo rootfs-b is set
    }
    ;;

   *)
    echo "Select the 'a' or 'b' pair of images, or can specify just kernel or rootfs."
    echo "Usage:"
    echo "# ${0##*/} [ -[ab][kernel|rootfs] ]"
    echo "# "
    echo "    u-boot env:"
    fw_printenv |sed -n "/^bootcmd/s/bootcmd=\(.*\)/  bootcmd:\n'\1'/p"
    fw_printenv |sed -n "/^bootargs/s/bootargs=\(.*\)/  bootargs:\n'\1'/p"
    echo 
    echo "    kernel boot parameters:"
    echo "'`cat /proc/cmdline`'"
    echo 
    echo "Currently configured to use:"
    echo "  kernel-`kernel_x`"
    echo "  rootfs-`rootfs_x`"
    echo 
    ;;
esac
